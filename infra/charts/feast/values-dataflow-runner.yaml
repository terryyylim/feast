feast-core:
    nodeSelector:
      cloud.google.com/gke-nodepool: default-pool
    gcpServiceAccount:
      enabled: true
    application-override.yaml:
      feast:
        stream:
          options:
            bootstrapServers: ${feast_kafka_1_ip}:31090
        jobs:
          runner: DataflowRunner
          options:
            project: ${GCLOUD_PROJECT}
            region: ${GCLOUD_REGION}
            zone: ${GCLOUD_REGION}-a
            tempLocation: gs://${TEMP_BUCKET}/tempLocation
            network: ${GCLOUD_NETWORK}
            subnetwork: regions/${GCLOUD_REGION}/subnetworks/${GCLOUD_SUBNET}
            maxNumWorkers: 1
            autoscalingAlgorithm: THROUGHPUT_BASED
            usePublicIps: false
            workerMachineType: n1-standard-1
            deadLetterTableSpec: ${GCLOUD_PROJECT}:${DATASET_NAME}.deadletter
          metrics:
            host: ${feast_statsd_ip}
  
  feast-online-serving:
    store.yaml:
      name: redis-store
      type: REDIS
      redis_config:
        host: ${feast_redis_ip}
        port: 6379
      subscriptions:
      - project: "*"
        name: "*"
        version: "*"
  
  feast-batch-serving:
    enabled: true
    store.yaml:
      name: bigquery-store
      type: BIGQUERY 
      bigquery_config:
        project_id: ${GCLOUD_PROJECT}
        dataset_id: ${DATASET_NAME}
      subscriptions:
      - project: "*"
        name: "*"
        version: "*"
    application-override.yaml:
      feast:
        jobs:
          staging-location: gs://${TEMP_BUCKET}/stagingLocation
    gcpServiceAccount:
      enabled: true 
  
  kafka:
    external:
      enabled: true
      type: LoadBalancer
      annotations:
        cloud.google.com/load-balancer-type: Internal
      loadBalancerSourceRanges:
      - 10.0.0.0/8
      - 172.16.0.0/12
      - 192.168.0.0/16
      firstListenerPort: 31090
      loadBalancerIP:
      - ${feast_kafka_1_ip}
      - ${feast_kafka_2_ip}
      - ${feast_kafka_3_ip}
    configurationOverrides:
      "advertised.listeners": |-
        EXTERNAL://${LOAD_BALANCER_IP}:31090
      "listener.security.protocol.map": |-
        PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      "log.retention.hours": 1
  
  redis:
    master:
      service:
        type: LoadBalancer
        loadBalancerIP: ${feast_redis_ip}
        annotations:
          cloud.google.com/load-balancer-type: Internal
        loadBalancerSourceRanges:
        - 10.0.0.0/8
        - 172.16.0.0/12
        - 192.168.0.0/16
  
  prometheus-statsd-exporter:
    service:
      type: LoadBalancer
      annotations:
        cloud.google.com/load-balancer-type: Internal
      loadBalancerSourceRanges:
      - 10.0.0.0/8
      - 172.16.0.0/12
      - 192.168.0.0/16
      loadBalancerIP: ${feast_statsd_ip}
  