name: master only

on:
  push:
    branches: master
    tags:
      - 'v*.*.*'

jobs:
  get-version:
    runs-on:  ubuntu-latest
    outputs:
      release_version: ${{ steps.get_release_version.outputs.release_version }}
      version_without_prefix: ${{ steps.get_release_version_without_prefix.outputs.version_without_prefix }}
      highest_semver_tag: ${{ steps.get_highest_semver.outputs.highest_semver_tag }}
    steps:
    - uses: actions/checkout@v2
    - name: Get release version
      id: get_release_version
      run: echo ::set-output name=release_version::${GITHUB_REF#refs/*/}
    - name: Get release version without prefix
      id: get_release_version_without_prefix
      env:
        RELEASE_VERSION: ${{ steps.get_release_version.outputs.release_version }}
      run: |
        echo ::set-output name=version_without_prefix::${RELEASE_VERSION:1}
    - name: Get highest semver
      id: get_highest_semver
      env:
        RELEASE_VERSION: ${{ steps.get_release_version.outputs.release_version }}
      run: |
        source infra/scripts/setup-common-functions.sh
        SEMVER_REGEX='^v[0-9]+\.[0-9]+\.[0-9]+(-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?$'
        if echo "${RELEASE_VERSION}" | grep -P "$SEMVER_REGEX" &>/dev/null ; then
          echo ::set-output name=highest_semver_tag::$(get_tag_release -m)
        fi
    - name: Check output
      env:
        RELEASE_VERSION: ${{ steps.get_release_version.outputs.release_version }}
        VERSION_WITHOUT_PREFIX: ${{ steps.get_release_version_without_prefix.outputs.version_without_prefix }}
        HIGHEST_SEMVER_TAG: ${{ steps.get_highest_semver.outputs.highest_semver_tag }}
      run: |
        echo $RELEASE_VERSION
        echo $VERSION_WITHOUT_PREFIX
        echo $HIGHEST_SEMVER_TAG

  build-publish-docker-images:
    runs-on: [ubuntu-latest]
    needs: get-version
    strategy:
      matrix:
        component: [core]
    env:
      MAVEN_CACHE: gs://feast-templocation-kf-feast/.m2.2020-08-19.tar
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '290.0.1'
          export_default_credentials: true
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - run: gcloud auth configure-docker --quiet
      - name: Get m2 cache
        run: |
          infra/scripts/download-maven-cache.sh \
          --archive-uri ${MAVEN_CACHE} \
          --output-dir .
      - name: Build and push versioned images
        env:
          RELEASE_VERSION: ${{ needs.get-version.outputs.release_version }}
          VERSION_WITHOUT_PREFIX: ${{ needs.get-version.outputs.version_without_prefix }}
          HIGHEST_SEMVER_TAG: ${{ needs.get-version.outputs.highest_semver_tag }}
        run: |
          echo $RELEASE_VERSION
          echo $VERSION_WITHOUT_PREFIX
          echo $HIGHEST_SEMVER_TAG
          echo "Only push to latest tag if tag is the highest semver version $HIGHEST_SEMVER_TAG"
          if [ "${VERSION_WITHOUT_PREFIX}" = "${HIGHEST_SEMVER_TAG:1}" ]
          then
            echo "is latest tag..."
          fi
  
  # build-docker-images:
  #   runs-on: [self-hosted]
  #   strategy:
  #     matrix:
  #       component: [core, serving, jobservice, jupyter, ci]
  #   env:
  #     MAVEN_CACHE: gs://feast-templocation-kf-feast/.m2.2020-08-19.tar
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #       with:
  #         version: '290.0.1'
  #         export_default_credentials: true
  #     - run: gcloud auth configure-docker --quiet
  #     - name: Get m2 cache
  #       run: |
  #         infra/scripts/download-maven-cache.sh \
  #         --archive-uri ${MAVEN_CACHE} \
  #         --output-dir .
  #     - name: Get version
  #       run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
  #     - name: Build image
  #       run: make build-${{ matrix.component }}-docker REGISTRY=gcr.io/kf-feast VERSION=${GITHUB_SHA} REVISION=${RELEASE_VERSION}
  #     - name: Push image
  #       run: make push-${{ matrix.component }}-docker REGISTRY=gcr.io/kf-feast VERSION=${GITHUB_SHA} REVISION=${RELEASE_VERSION}
  #     - name: Push development Docker image
  #       run: |
  #         if [ ${GITHUB_REF#refs/*/} == "master" ]; then
  #           docker tag gcr.io/kf-feast/feast-${{ matrix.component }}:${GITHUB_SHA} gcr.io/kf-feast/feast-${{ matrix.component }}:develop
  #           docker push gcr.io/kf-feast/feast-${{ matrix.component }}:develop
  #         fi
  #     - name: Push versioned Docker image
  #       run: |
  #         source infra/scripts/setup-common-functions.sh
  #         # Build and push semver tagged commits
  #         # Regular expression should match MAJOR.MINOR.PATCH[-PRERELEASE[.IDENTIFIER]]
  #         # eg. v0.7.1 v0.7.2-alpha v0.7.2-rc.1
  #         SEMVER_REGEX='^v[0-9]+\.[0-9]+\.[0-9]+(-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?$'
  #         if echo "${RELEASE_VERSION}" | grep -P "$SEMVER_REGEX" &>/dev/null ; then
  #           VERSION_WITHOUT_PREFIX=${RELEASE_VERSION:1}

  #           docker tag gcr.io/kf-feast/feast-${{ matrix.component }}:${GITHUB_SHA} gcr.io/kf-feast/feast-${{ matrix.component }}:${VERSION_WITHOUT_PREFIX}
  #           docker push gcr.io/kf-feast/feast-${{ matrix.component }}:${VERSION_WITHOUT_PREFIX}

  #           # Also update "latest" image if tagged commit is pushed to stable branch
  #           HIGHEST_SEMVER_TAG=$(get_tag_release -m)
  #           echo "Only push to latest tag if tag is the highest semver version $HIGHEST_SEMVER_TAG"

  #           if [ "${VERSION_WITHOUT_PREFIX}" = "${HIGHEST_SEMVER_TAG:1}" ]
  #           then
  #             docker tag gcr.io/kf-feast/feast-${{ matrix.component }}:${GITHUB_SHA} gcr.io/kf-feast/feast-${{ matrix.component }}:latest
  #             docker push gcr.io/kf-feast/feast-${{ matrix.component }}:latest
  #           fi
  #         fi

  # publish-ingestion-jar:
  #   runs-on: [ self-hosted ]
  #   env:
  #     PUBLISH_BUCKET: feast-jobs
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
  #       with:
  #         version: '290.0.1'
  #         export_default_credentials: true
  #     - uses: actions/setup-java@v1
  #       with:
  #         java-version: '11'
  #     - uses: stCarolas/setup-maven@v3
  #       with:
  #         maven-version: 3.6.3
  #     - name: Publish develop version of ingestion job
  #       run: |
  #         if [ ${GITHUB_REF#refs/*/} == "master" ]; then
  #           make build-java-no-tests REVISION=develop
  #           gsutil cp ./spark/ingestion/target/feast-ingestion-spark-develop.jar gs://${PUBLISH_BUCKET}/spark/ingestion/
  #         fi
  #     - name: Get version
  #       run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
  #     - name: Publish tagged version of ingestion job
  #       run: |
  #         SEMVER_REGEX='^v[0-9]+\.[0-9]+\.[0-9]+(-([0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*))?$'
  #         if echo "${RELEASE_VERSION}" | grep -P "$SEMVER_REGEX" &>/dev/null ; then
  #           VERSION=${RELEASE_VERSION:1}
  #           make build-java-no-tests REVISION=${VERSION}
  #           gsutil cp ./spark/ingestion/target/feast-ingestion-spark-${VERSION}.jar gs://${PUBLISH_BUCKET}/spark/ingestion/
  #         fi